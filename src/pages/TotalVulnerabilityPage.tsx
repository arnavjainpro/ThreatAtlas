import React from 'react';
import DetailPage from '../components/DetailPage';
import ExcelExportButton from '../components/ExcelExportButton';

const TotalVulnerabilityPage: React.FC = () => {
  const mockData = {
    title: 'Total Vulnerability Assessment',
    subtitle: 'Comprehensive security risk analysis combining all vulnerability factors',
    totalScore: 56.6,
    maxScore: 100,
    scoreBreakdown: [
      { 
        factor: 'Base Vulnerabilities', 
        impact: 89, 
        maxImpact: 100,
        description: 'Core security flaws identified in code, configuration, and architecture that pose direct security risks.',
        recommendations: [
          'Prioritize critical and high-severity vulnerabilities',
          'Implement secure coding practices',
          'Regular security code reviews'
        ]
      },
      { 
        factor: 'Actionable Issues', 
        impact: 24, 
        maxImpact: 100,
        description: 'Remediable security issues that can be addressed through configuration changes or patches.',
        recommendations: [
          'Apply security patches promptly',
          'Update vulnerable dependencies',
          'Fix misconfigurations'
        ]
      },
      { 
        factor: 'Risk Amplification', 
        impact: 12, 
        maxImpact: 100,
        description: 'Additional risk factors from vulnerability combinations and environmental factors.',
        recommendations: [
          'Implement defense in depth strategies',
          'Regular threat modeling exercises',
          'Monitor for vulnerability chaining'
        ]
      }
    ],
    additionalInfo: (
      <div className="additional-info">
        <div className="info-section">
          <h3>Risk Assessment Summary</h3>
          <div className="risk-metrics">
            <div className="metric">
              <span className="metric-label">Overall Risk Level:</span>
              <span className="metric-value risk-medium">Medium Risk</span>
            </div>
            <div className="metric">
              <span className="metric-label">Trend:</span>
              <span className="metric-value trend-up">↗️ Increasing</span>
            </div>
            <div className="metric">
              <span className="metric-label">Priority Actions:</span>
              <span className="metric-value">7 Critical Items</span>
            </div>
          </div>
        </div>
        
        <div className="info-section">
          <h3>Key Risk Factors</h3>
          <ul className="risk-factors">
            <li>Application handles sensitive data (PII, financial information)</li>
            <li>External-facing application with public internet exposure</li>
            <li>Integration with third-party services and APIs</li>
            <li>Compliance requirements (SOC 2, PCI DSS, HIPAA)</li>
            <li>High-value target for potential attackers</li>
          </ul>
        </div>
        
        <div className="info-section">
          <h3>Recent Trend Analysis</h3>
          <div className="trend-data">
            <div className="trend-item">
              <span>This Week: 56.6/100 (+2.1)</span>
            </div>
            <div className="trend-item">
              <span>Last Week: 54.5/100 (-1.8)</span>
            </div>
            <div className="trend-item">
              <span>Last Month: 58.2/100 (+4.3)</span>
            </div>
          </div>
        </div>
      </div>
    )
  };

  return (
    <DetailPage
      title={mockData.title}
      subtitle={mockData.subtitle}
      icon="◉"
      totalScore={mockData.totalScore}
      maxScore={mockData.maxScore}
      scoreBreakdown={mockData.scoreBreakdown}
      additionalInfo={mockData.additionalInfo}
      exportButton={<ExcelExportButton pageType="total" vulnerabilityCount={38} />}
    />
  );
};

export default TotalVulnerabilityPage;
